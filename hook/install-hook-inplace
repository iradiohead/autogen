#!/usr/bin/env python3

##
# Copyright (c) Nokia 2018. All rights reserved.
#
# Author: 
# Email: nokia-sbell.com
#

import os
import sys
import stat
import subprocess

from config import commands_to_hook, do_not_hook, hook_install_dir, logfile, hook_bin_dir, hook_program


def run_command(cmd):
    result = subprocess.run(cmd)
    if result.returncode != 0:
        print('Error running command: ' + str(cmd))
        print('Return code: {:d}'.format(result.returncode))
        exit(1)


def main():
    if len(sys.argv) < 2:
        print('Usage {:s} PATH [PATH ...]'.format(sys.argv[0]))
        exit(1)

    for item in sys.argv[1:]:
        path = os.path.join(os.getcwd(), item)
        executables = list()
        targets = dict()

        filelist = sorted(os.listdir(path))
        for filename in filelist:
            filepath = os.path.join(path, filename)
            if filepath.endswith('-hooked') or os.path.isfile(filepath + '.target'):
                continue
            realpath = filepath
            if os.path.islink(filepath):
                realpath = os.path.realpath(filepath)
            elif not os.path.isfile(filepath):
                continue
            try:
                st = os.stat(realpath)
            except:
                continue
            mode = st.st_mode
            if not mode & stat.S_IXUSR:
                continue
            if (filename not in executables) and (filename not in do_not_hook):
                executables.append(filename)
                targets[filename] = filepath
            else:
                continue

        with open(os.path.join(path, 'hooklog.conf'), 'w') as f:
            f.write(logfile)

        for cmd in executables:
            targ = os.path.join(path, cmd)
            run_command(['mv', targ, targ + '-hooked'])
            run_command(['cp', '-p', hook_program, targ])
            with open(os.path.join(path, cmd + '.target'), 'w') as f:
                f.write(targets[cmd] + '-hooked')


if __name__ == '__main__':
    main()
